package core.creature;

import utils.Tag;

public enum CreatureTag implements Tag {
    UNDEFINED("UNDEFINED", 0),
    // Poisonous
    POISONOUS("POISONOUS", 2),
    // Eater
    ADD_PERMANENT_PERCENTAGE_HP_BEFORE_BATTLE("ADD_PERMANENT_HP_BEFORE_BATTLE", 3),
    ADD_PERMANENT_FLOAT_HP_BEFORE_BATTLE("ADD_PERMANENT_FLOAT_HP_BEFORE_BATTLE", 4),
    // Robot
    ADD_TEMP_PERCENTAGE_HP_BEFORE_BATTLE("ADD_TEMP_HP_BEFORE_BATTLE", 5),
    ADD_TEMP_PERCENTAGE_ATTACK_BEFORE_BATTLE("ADD_TEMP_ATTACK_BEFORE_BATTLE", 6),
    ADD_TEMP_PARM_BEFORE_BATTLE("ADD_TEMP_PARM_BEFORE_BATTLE", 7),
    ADD_TEMP_MARM_BEFORE_BATTLE("ADD_TEMP_MARM_BEFORE_BATTLE", 8),
    // Student
    ADD_MANA_AFTER_ALLY_USED_SKILL("ADD_MANA_AFTER_ALLY_USED_SKILL", 9),
    // Fireborn
    BURN_BUFF("BURN_BUFF", 10),
    PERCENTAGE_BURN_BUFF("PERCENTAGE_BURN_BUFF", 11),
    // Demon
    BURN_PERCENTAGE_MANA_ON_ATTACK("BURN_PERCENTAGE_MANA_ON_ATTACK", 11),
    BURN_FLOAT_MANA_ON_ATTACK("BURN_FLOAT_MANA_ON_ATTACK", 12),
    // Alchemist
    BOUNCING_SKILL("BOUNCING_SKILL", 14),
    // Duelist
    COUNTERATTACK_CHANCE("COUNTER_ATTACK_CHANCE", 23),
    COUNTERATTACK_DAMAGE("COUNTERATTACK_DAMAGE", 24),
    PARRY("PARRY", 25),
    // Frostborn
    ADDITIONAL_MAGIC_DAMAGE_ON_ATTACK("ADDITIONAL_MAGIC_DAMAGE_ON_ATTACK", 26),
    PERCENTAGE_SLOW_ON_ATTACK("PERCENTAGE_SLOW_ON_ATTACK", 27),
    // Archer
    ADDITIONAL_ATTACK_CHANCE("ADDITIONAL_ATTACK_CHANCE", 28),
    // Pirate
    INCREASE_CHANCE("INCREASE_CHANCE", 29),
    // Knight
    BARRIER_AFTER_SKILL("BARRIER_AFTER_SKILL", 30),
    // Warrior
    ADD_PERCENTAGE_ATTACK_AFTER_TURN("ADD_PERCENTAGE_ATTACK_AFTER_TURN", 31),
    ADD_ARMOR_AFTER_TURN("ADD_ARMOR_AFTER_TURN", 32),
    // Spirits
    SPELL_POWER_TO_SPEED("SPELL_POWER_TO_SPEED", 33),
    ADD_PERCENTAGE_SPEED_TO_DODGE("ADD_PERCENTAGE_SPEED_TO_DODGE", 34),
    // Beasts
    PERCENTAGE_OF_ADDITIONAL_DAMAGE_BY_HP("PERCENTAGE_OF_ADDITIONAL_DAMAGE_BY_HP", 35),
    // Summoners
    SUMMON_CREATURE_WITH_VALUE("SUMMON_CREATURE_WITH_VALUE", 36),


    // Basic
    HAVE_BASIC_ATTACK("HAVE_BASIC_ATTACK", 100),
    TAKE_MORE_MAGIC_DAMAGE("TAKE_MORE_MAGIC_DAMAGE", 105),
    TAKE_MORE_PHYSICAL_DAMAGE("TAKE_MORE_PHYSICAL_DAMAGE", 106),
    TAKE_MORE_TRUE_DAMAGE("TAKE_MORE_TRUE_DAMAGE", 107),
    TAKE_MORE_DAMAGE("TAKE_MORE_DAMAGE", 108),
    TAKE_LESS_MAGIC_DAMAGE("TAKE_MORE_MAGIC_DAMAGE", 109),
    TAKE_LESS_PHYSICAL_DAMAGE("TAKE_MORE_PHYSICAL_DAMAGE", 120),
    TAKE_LESS_TRUE_DAMAGE("TAKE_MORE_TRUE_DAMAGE", 121),
    TAKE_LESS_DAMAGE("TAKE_LESS_DAMAGE", 122),
    DEAL_MORE_MAGIC_DAMAGE("TAKE_MORE_MAGIC_DAMAGE", 123),
    DEAL_MORE_PHYSICAL_DAMAGE("DEAL_MORE_PHYSICAL_DAMAGE", 124),
    DEAL_MORE_TRUE_DAMAGE("DEAL_MORE_TRUE_DAMAGE", 125),
    DEAL_MORE_DAMAGE("DEAL_MORE_DAMAGE", 126),
    DEAL_LESS_MAGIC_DAMAGE("DEAL_LESS_MAGIC_DAMAGE", 127),
    DEAL_LESS_PHYSICAL_DAMAGE("DEAL_LESS_PHYSICAL_DAMAGE", 128),
    DEAL_LESS_TRUE_DAMAGE("DEAL_LESS_TRUE_DAMAGE", 129),
    DEAL_LESS_DAMAGE("DEAL_LESS_DAMAGE", 130),
    PHYSICAL_BARRIER("PHYSICAL_BARRIER", 131),
    MAGIC_BARRIER("MAGIC_BARRIER", 132),
    DODGE_ATTACK_CHANCE("DODGE_ATTACK_CHANCE", 133),
    BARRIER("BARRIER", 134);

    private String name;
    private int id;

    CreatureTag(String name, int id) {
        this.name = name;
        this.id = id;
    }

    public static CreatureTag byName(String name) {
        for (CreatureTag status : CreatureTag.values()) {
            if (status.name.equals(name)) {
                return status;
            }
        }
        return UNDEFINED;
    }

    public static CreatureTag byId(int id) {
        for (CreatureTag status : CreatureTag.values()) {
            if (status.id == id) {
                return status;
            }
        }
        return UNDEFINED;
    }

    @Override
    public int getId() {
        return id;
    }

    @Override
    public String getName() {
        return name;
    }
}
